# -*- coding: utf-8 -*-
"""mnist-cnn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ASAzH2vjShR4oHFrtDZU725gaKQssOib
"""

from keras.layers import *
from keras.models import Sequential

model=Sequential()
model.add(Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1)))
model.add(MaxPool2D((2,2)))
model.add(Conv2D(64,(3,3),activation='relu',input_shape=(28,28,1)))
model.add(MaxPool2D((2,2)))
model.add(Conv2D(64,(3,3),activation='relu',input_shape=(28,28,1)))
model.add(Flatten())
model.add(Dense(64,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

from keras.datasets import mnist
from keras.utils import to_categorical

(Xtrain,Ytrain),(Xtest,Ytest)=mnist.load_data()

def preprocess_data(X,Y):
    X=X.reshape(-1,28,28,1)
    X=X/255.0
    Y=to_categorical(Y)
    return X,Y

Xtrain,Ytrain=preprocess_data(Xtrain,Ytrain)

print(Xtrain.shape,Ytrain.shape)

Xtest,Ytest=preprocess_data(Xtest,Ytest)
print(Xtest.shape,Ytest.shape)

model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

hist=model.fit(Xtrain,Ytrain,epochs=20,validation_split=0.1,batch_size=128)

model.evaluate(Xtest,Ytest)

